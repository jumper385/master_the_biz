import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, e as element, t as text, a as space, c as claim_element, b as children, f as claim_text, g as detach_dev, h as claim_space, j as set_style, k as add_location, l as attr_dev, m as insert_dev, n as append_dev, o as noop } from './client.f992e66b.js';

/* src\routes\index.svelte generated by Svelte v3.24.1 */

const file = "src\\routes\\index.svelte";

function create_fragment(ctx) {
	let div1;
	let div0;
	let h10;
	let t0;
	let t1;
	let h11;
	let t2;
	let t3;
	let h12;
	let t4;
	let t5;
	let p0;
	let t6;
	let t7;
	let div2;
	let h13;
	let t8;
	let t9;
	let p1;
	let t10;
	let t11;
	let br0;
	let t12;
	let a0;
	let t13;
	let t14;
	let div3;
	let h14;
	let t15;
	let t16;
	let p2;
	let t17;
	let t18;
	let br1;
	let t19;
	let a1;
	let t20;
	let t21;
	let div8;
	let h15;
	let t22;
	let t23;
	let div7;
	let div4;
	let h20;
	let t24;
	let t25;
	let p3;
	let t26;
	let t27;
	let div5;
	let h21;
	let t28;
	let t29;
	let p4;
	let t30;
	let t31;
	let div6;
	let h22;
	let t32;
	let t33;
	let p5;
	let t34;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			h10 = element("h1");
			t0 = text("Business Consulting");
			t1 = space();
			h11 = element("h1");
			t2 = text("Business Automation");
			t3 = space();
			h12 = element("h1");
			t4 = text("Book Keeping");
			t5 = space();
			p0 = element("p");
			t6 = text("At master the books, we strive to do more lorem ipsum to ensure that our clinets are even more lorem ipsum. Chuck tongue capicola, kielbasa pastrami doner turkey. Doner ball tip drumstick cupim. Burgdoggen pork belly ground round, brisket shank ball tip meatloaf pastrami spare ribs sausage sirloin frankfurter fatback short loin.");
			t7 = space();
			div2 = element("div");
			h13 = element("h1");
			t8 = text("This is a Service Heading");
			t9 = space();
			p1 = element("p");
			t10 = text("In an ideal world. I want you to take it to the next level use a kpop logo that's not a kpop logo! ugh, and could you solutionize that for me. Can it be more retro mmm, exactly like that, but different could you do an actual logo instead of a font the flier should feel like a warm handshake, and labrador but labrador yet i think this should be fairly easy so if you just want to have a look.");
			t11 = space();
			br0 = element("br");
			t12 = space();
			a0 = element("a");
			t13 = text("Expore More");
			t14 = space();
			div3 = element("div");
			h14 = element("h1");
			t15 = text("This is another Service Heading");
			t16 = space();
			p2 = element("p");
			t17 = text("Im not sure, try something else submit your meaningless business jargon to be used on the site!, yet could you do an actual logo instead of a font. Other agencies charge much lesser it's great, can you add a beard though so other agencies charge much lesser.");
			t18 = space();
			br1 = element("br");
			t19 = space();
			a1 = element("a");
			t20 = text("Deep Dive");
			t21 = space();
			div8 = element("div");
			h15 = element("h1");
			t22 = text("Speak to Us");
			t23 = space();
			div7 = element("div");
			div4 = element("div");
			h20 = element("h2");
			t24 = text("Call");
			t25 = space();
			p3 = element("p");
			t26 = text("+61 080 834 745");
			t27 = space();
			div5 = element("div");
			h21 = element("h2");
			t28 = text("Email");
			t29 = space();
			p4 = element("p");
			t30 = text("email@umerm.ngyh.ya");
			t31 = space();
			div6 = element("div");
			h22 = element("h2");
			t32 = text("Meet Up");
			t33 = space();
			p5 = element("p");
			t34 = text("Get Directions");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { style: true });
			var div0_nodes = children(div0);
			h10 = claim_element(div0_nodes, "H1", { style: true });
			var h10_nodes = children(h10);
			t0 = claim_text(h10_nodes, "Business Consulting");
			h10_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			h11 = claim_element(div0_nodes, "H1", { style: true });
			var h11_nodes = children(h11);
			t2 = claim_text(h11_nodes, "Business Automation");
			h11_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			h12 = claim_element(div0_nodes, "H1", { style: true });
			var h12_nodes = children(h12);
			t4 = claim_text(h12_nodes, "Book Keeping");
			h12_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t5 = claim_space(div1_nodes);
			p0 = claim_element(div1_nodes, "P", { style: true });
			var p0_nodes = children(p0);
			t6 = claim_text(p0_nodes, "At master the books, we strive to do more lorem ipsum to ensure that our clinets are even more lorem ipsum. Chuck tongue capicola, kielbasa pastrami doner turkey. Doner ball tip drumstick cupim. Burgdoggen pork belly ground round, brisket shank ball tip meatloaf pastrami spare ribs sausage sirloin frankfurter fatback short loin.");
			p0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);
			div2 = claim_element(nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h13 = claim_element(div2_nodes, "H1", {});
			var h13_nodes = children(h13);
			t8 = claim_text(h13_nodes, "This is a Service Heading");
			h13_nodes.forEach(detach_dev);
			t9 = claim_space(div2_nodes);
			p1 = claim_element(div2_nodes, "P", {});
			var p1_nodes = children(p1);
			t10 = claim_text(p1_nodes, "In an ideal world. I want you to take it to the next level use a kpop logo that's not a kpop logo! ugh, and could you solutionize that for me. Can it be more retro mmm, exactly like that, but different could you do an actual logo instead of a font the flier should feel like a warm handshake, and labrador but labrador yet i think this should be fairly easy so if you just want to have a look.");
			p1_nodes.forEach(detach_dev);
			t11 = claim_space(div2_nodes);
			br0 = claim_element(div2_nodes, "BR", {});
			t12 = claim_space(div2_nodes);
			a0 = claim_element(div2_nodes, "A", { class: true, href: true });
			var a0_nodes = children(a0);
			t13 = claim_text(a0_nodes, "Expore More");
			a0_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t14 = claim_space(nodes);
			div3 = claim_element(nodes, "DIV", { class: true, style: true });
			var div3_nodes = children(div3);
			h14 = claim_element(div3_nodes, "H1", {});
			var h14_nodes = children(h14);
			t15 = claim_text(h14_nodes, "This is another Service Heading");
			h14_nodes.forEach(detach_dev);
			t16 = claim_space(div3_nodes);
			p2 = claim_element(div3_nodes, "P", {});
			var p2_nodes = children(p2);
			t17 = claim_text(p2_nodes, "Im not sure, try something else submit your meaningless business jargon to be used on the site!, yet could you do an actual logo instead of a font. Other agencies charge much lesser it's great, can you add a beard though so other agencies charge much lesser.");
			p2_nodes.forEach(detach_dev);
			t18 = claim_space(div3_nodes);
			br1 = claim_element(div3_nodes, "BR", {});
			t19 = claim_space(div3_nodes);
			a1 = claim_element(div3_nodes, "A", { class: true, href: true });
			var a1_nodes = children(a1);
			t20 = claim_text(a1_nodes, "Deep Dive");
			a1_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t21 = claim_space(nodes);
			div8 = claim_element(nodes, "DIV", { style: true });
			var div8_nodes = children(div8);
			h15 = claim_element(div8_nodes, "H1", {});
			var h15_nodes = children(h15);
			t22 = claim_text(h15_nodes, "Speak to Us");
			h15_nodes.forEach(detach_dev);
			t23 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { style: true });
			var div7_nodes = children(div7);
			div4 = claim_element(div7_nodes, "DIV", {});
			var div4_nodes = children(div4);
			h20 = claim_element(div4_nodes, "H2", {});
			var h20_nodes = children(h20);
			t24 = claim_text(h20_nodes, "Call");
			h20_nodes.forEach(detach_dev);
			t25 = claim_space(div4_nodes);
			p3 = claim_element(div4_nodes, "P", {});
			var p3_nodes = children(p3);
			t26 = claim_text(p3_nodes, "+61 080 834 745");
			p3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t27 = claim_space(div7_nodes);
			div5 = claim_element(div7_nodes, "DIV", {});
			var div5_nodes = children(div5);
			h21 = claim_element(div5_nodes, "H2", {});
			var h21_nodes = children(h21);
			t28 = claim_text(h21_nodes, "Email");
			h21_nodes.forEach(detach_dev);
			t29 = claim_space(div5_nodes);
			p4 = claim_element(div5_nodes, "P", {});
			var p4_nodes = children(p4);
			t30 = claim_text(p4_nodes, "email@umerm.ngyh.ya");
			p4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t31 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", {});
			var div6_nodes = children(div6);
			h22 = claim_element(div6_nodes, "H2", {});
			var h22_nodes = children(h22);
			t32 = claim_text(h22_nodes, "Meet Up");
			h22_nodes.forEach(detach_dev);
			t33 = claim_space(div6_nodes);
			p5 = claim_element(div6_nodes, "P", {});
			var p5_nodes = children(p5);
			t34 = claim_text(p5_nodes, "Get Directions");
			p5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			set_style(h10, "margin", "0 12pt");
			add_location(h10, file, 18, 2, 569);
			set_style(h11, "margin", "0 12pt");
			add_location(h11, file, 19, 2, 622);
			set_style(h12, "margin", "0 12pt");
			add_location(h12, file, 20, 2, 675);
			set_style(div0, "display", "flex");
			set_style(div0, "align-items", "center");
			set_style(div0, "justify-content", "center");
			set_style(div0, "margin-bottom", "32pt");
			add_location(div0, file, 17, 1, 474);
			set_style(p0, "text-align", "center");
			set_style(p0, "width", "40vw");
			set_style(p0, "margin", "0 auto");
			add_location(p0, file, 23, 1, 729);
			attr_dev(div1, "class", "landing svelte-g7pfq6");
			add_location(div1, file, 16, 0, 451);
			add_location(h13, file, 27, 1, 1159);
			add_location(p1, file, 28, 1, 1195);
			add_location(br0, file, 29, 1, 1597);
			attr_dev(a0, "class", "cta_button");
			attr_dev(a0, "href", "services");
			add_location(a0, file, 30, 1, 1603);
			attr_dev(div2, "class", "page_section");
			add_location(div2, file, 26, 0, 1129);
			add_location(h14, file, 34, 1, 1756);
			add_location(p2, file, 35, 1, 1798);
			add_location(br1, file, 36, 1, 2065);
			attr_dev(a1, "class", "cta_button");
			attr_dev(a1, "href", "services");
			add_location(a1, file, 37, 1, 2071);
			attr_dev(div3, "class", "page_section");
			set_style(div3, "background", "#313137", 1);
			set_style(div3, "color", "white", 1);
			add_location(div3, file, 33, 0, 1665);
			add_location(h15, file, 41, 1, 2206);
			add_location(h20, file, 44, 3, 2301);
			add_location(p3, file, 45, 3, 2318);
			add_location(div4, file, 43, 2, 2292);
			add_location(h21, file, 48, 3, 2361);
			add_location(p4, file, 49, 3, 2379);
			add_location(div5, file, 47, 2, 2352);
			add_location(h22, file, 52, 3, 2426);
			add_location(p5, file, 53, 3, 2446);
			add_location(div6, file, 51, 2, 2417);
			set_style(div7, "display", "grid");
			set_style(div7, "grid-template-columns", "1fr 1fr 1fr");
			add_location(div7, file, 42, 1, 2228);
			set_style(div8, "padding", "64pt 32pt");
			set_style(div8, "box-sizing", "border-box");
			set_style(div8, "text-align", "center");
			add_location(div8, file, 40, 0, 2131);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, h10);
			append_dev(h10, t0);
			append_dev(div0, t1);
			append_dev(div0, h11);
			append_dev(h11, t2);
			append_dev(div0, t3);
			append_dev(div0, h12);
			append_dev(h12, t4);
			append_dev(div1, t5);
			append_dev(div1, p0);
			append_dev(p0, t6);
			insert_dev(target, t7, anchor);
			insert_dev(target, div2, anchor);
			append_dev(div2, h13);
			append_dev(h13, t8);
			append_dev(div2, t9);
			append_dev(div2, p1);
			append_dev(p1, t10);
			append_dev(div2, t11);
			append_dev(div2, br0);
			append_dev(div2, t12);
			append_dev(div2, a0);
			append_dev(a0, t13);
			insert_dev(target, t14, anchor);
			insert_dev(target, div3, anchor);
			append_dev(div3, h14);
			append_dev(h14, t15);
			append_dev(div3, t16);
			append_dev(div3, p2);
			append_dev(p2, t17);
			append_dev(div3, t18);
			append_dev(div3, br1);
			append_dev(div3, t19);
			append_dev(div3, a1);
			append_dev(a1, t20);
			insert_dev(target, t21, anchor);
			insert_dev(target, div8, anchor);
			append_dev(div8, h15);
			append_dev(h15, t22);
			append_dev(div8, t23);
			append_dev(div8, div7);
			append_dev(div7, div4);
			append_dev(div4, h20);
			append_dev(h20, t24);
			append_dev(div4, t25);
			append_dev(div4, p3);
			append_dev(p3, t26);
			append_dev(div7, t27);
			append_dev(div7, div5);
			append_dev(div5, h21);
			append_dev(h21, t28);
			append_dev(div5, t29);
			append_dev(div5, p4);
			append_dev(p4, t30);
			append_dev(div7, t31);
			append_dev(div7, div6);
			append_dev(div6, h22);
			append_dev(h22, t32);
			append_dev(div6, t33);
			append_dev(div6, p5);
			append_dev(p5, t34);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			if (detaching) detach_dev(t7);
			if (detaching) detach_dev(div2);
			if (detaching) detach_dev(t14);
			if (detaching) detach_dev(div3);
			if (detaching) detach_dev(t21);
			if (detaching) detach_dev(div8);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);
	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguOTQ5NGM4NDQuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
